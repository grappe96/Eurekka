# -*- coding: utf-8 -*-
"""Contents_Based_Filtering_Recipes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bZhdUWoAvH0WrHuuGQfw2QzKGCEQvrJl

### Recommend Recipes By Contents Based Filtering
"""

import pandas as pd
import numpy as np
import warnings; warnings.filterwarnings('ignore')
from google.colab import drive
drive.mount('/gdrive')

recipes=pd.read_excel('/gdrive/My Drive/Colab Notebooks/DataHandling/recipes_recommend.xlsx')
print(type(recipes))
recipes.head(10)

from sklearn.feature_extraction.text import CountVectorizer

# CountVectorizer를 적용하기 위해 공백문자로 word 단위가 구분되는 문자열로 변환. 
count_vect = CountVectorizer(min_df=0, ngram_range=(1,2))
prefer_mat = count_vect.fit_transform(recipes['parts'])
print(prefer_mat.shape)

from sklearn.metrics.pairwise import cosine_similarity

prefer_sim = cosine_similarity(prefer_mat, prefer_mat)
print(prefer_sim.shape)
print(prefer_sim)

# recipes_data = pd.DataFrame(prefer_sim)
# xlxs_dir = '/gdrive/My Drive/Colab Notebooks/DataHandling/recipesData.xlsx'

# with pd.ExcelWriter(xlxs_dir) as writer:
#      recipes_data.to_excel(writer, sheet_name = 'compare')

prefer_sim_sorted_ind = prefer_sim.argsort()[:, ::-1]
print(prefer_sim_sorted_ind)

def find_sim_recipes(df, sorted_ind, my_refrigerator):
    
    # 인자로 입력된 plants DataFrame에서 'RCP_NM' 컬럼이 입력된 my_refrigerator 값인 DataFrame추출
    refrigerator = df[df['title'] == my_refrigerator]
    
    # my_refrigerator을 가진 DataFrame의 index 객체를 ndarray로 반환하고 
    # sorted_ind 인자로 입력된 prefer_sim_sorted_ind 객체에서 유사도 순으로 top_n 개의 index 추출
    refrigerator_index = refrigerator.index.values
    
    similar_indexes = sorted_ind[refrigerator_index]
    
    # 추출된 top_n index들 출력. top_n index는 2차원 데이터 임. 
    #dataframe에서 index로 사용하기 위해서 1차원 array로 변경
    # print(similar_indexes)
    similar_indexes = similar_indexes.reshape(-1)
    
    return df.iloc[similar_indexes]

similar_recipes = find_sim_recipes(recipes, prefer_sim_sorted_ind, '내 냉장고')
similar_recipes = similar_recipes[similar_recipes['section'] == 'food']
similar_recipes[:10]